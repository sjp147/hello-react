{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "app": "hello-react",
        "template": "hello-react"
    },
    "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/nodejs-ex/blob/master/README.md.",
    "metadata": {
        "annotations": {
            "description": "An example Node.js application with a MongoDB database. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/nodejs-ex/blob/master/README.md.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.",
            "iconClass": "icon-nodejs",
            "openshift.io/display-name": "Node.js + MongoDB (Ephemeral)",
            "openshift.io/documentation-url": "https://github.com/sclorg/nodejs-ex",
            "openshift.io/long-description": "This template defines resources needed to develop a NodeJS application, including a build configuration, application deployment configuration, and database deployment configuration.  The database is stored in non-persistent storage, so this configuration should be used for experimental purposes only.",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "openshift.io/support-url": "https://access.redhat.com",
            "tags": "quickstart,nodejs",
            "template.openshift.io/bindable": "false"
        },
        "name": "nodejs-mongodb-example"
    },
    "objects": [


{ 
  apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    app: hello-react-pipeline
  name: hello-react-pipeline
spec:
  source:
    git:
      ref: master
      uri: https://github.com/sjp147/hello-react.git
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfilePath: pipeline/Jenkinsfile
    type: JenkinsPipeline
  triggers: []
    },

      {
        "apiVersion": "v1",
        "kind": "ImageStream",
        "metadata": {
            "annotations": {
                "description": "Keeps track of changes in the application image"
            },
            "name": "${NAME}"
        }
    }
    ]}
  }
